/**
 * Generated by orval v6.11.1 üç∫
 * Do not edit manually.
 * xSwap API V2
 * xSwap project API V2
 * OpenAPI spec version: v3.0.0
 */

export type GetDelegateWithdrawV3Params = {
	chain_id: string
	token_address: string
	user_address: string
	receiver_address?: string
}

export type GetDelegateAddressV3Params = {
	chain_id: string
	user_address: string
	from_address?: string
}

export type GetSwapsV3Params = {
	swap_ids?: string[]
	sort_by?: SwapSortByV3
	sort_order?: SortOrderV3
	skip_steps?: boolean
}

export type GetQuotesV3Params = {
	from_chain_id: string
	to_chain_id: string
	from_token_address: string
	to_token_address: string
	from_amount: number
	fixed_rate?: boolean
}

export type GetPermitV3Params = {
	chain_id: string
	token_address: string
	user_address: string
	p2?: boolean
	p2_amount?: number
}

export type GetApproveV3Params = {
	chain_id: string
	token_address: string
	user_address: string
}

export type GetAllowanceV3Params = {
	chain_id: string
	token_address: string
	user_address: string
}

export type GetTokenFiltersV3Params = {
	fixed_rate: boolean
	gasless: boolean
	from_token_address: string
	from_token_chain_id: string
}

export type ValidationErrorV3LocItem = string | number

export interface ValidationErrorV3 {
	loc: ValidationErrorV3LocItem[]
	msg: string
	type: string
}

export interface TransactionDataV3 {
	chain_id: string
	data: string
	value?: string
	to_address: string
	from_address: string
	gas_units: string
}

export interface TokenListV3 {
	tokens: TokenV3[]
}

/**
 * An enumeration.
 */
export type TokenFilterModeV3 =
	(typeof TokenFilterModeV3)[keyof typeof TokenFilterModeV3]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const TokenFilterModeV3 = {
	exclude: 'exclude',
	include: 'include',
} as const

export interface TokenFilterV3 {
	mode: TokenFilterModeV3
	tokens: BaseTokenV3[]
}

export interface TokenFiltersV3 {
	from_filter: TokenFilterV3
	to_filter: TokenFilterV3
}

export interface TokenV3 {
	chain_id: string
	address: string
	symbol: string
	name: string
	icon: string
	decimals: number
	eip2612: boolean
}

export interface TimeEstimateV3 {
	max: number
	avg: number
	min: number
}

/**
 * An enumeration.
 */
export type SwapStepStateV3 =
	(typeof SwapStepStateV3)[keyof typeof SwapStepStateV3]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SwapStepStateV3 = {
	pending: 'pending',
	processing: 'processing',
	completed: 'completed',
	cancelled: 'cancelled',
} as const

export interface SwapStepV3 {
	id: string
	from_chain_id: string
	to_chain_id: string
	from_token_address: string
	to_token_address: string
	from_amount: string
	to_amount: string
	from_use_delegate: boolean
	from_address: string
	estimated_time: TimeEstimateV3
	provider: string
	state: SwapStepStateV3
	error?: string
	transactions: BlockchainTransactionV3[]
}

/**
 * An enumeration.
 */
export type SwapStateV3 = (typeof SwapStateV3)[keyof typeof SwapStateV3]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SwapStateV3 = {
	pending: 'pending',
	processing: 'processing',
	completed: 'completed',
	cancelled: 'cancelled',
} as const

/**
 * An enumeration.
 */
export type SwapSortByV3 = (typeof SwapSortByV3)[keyof typeof SwapSortByV3]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SwapSortByV3 = {
	created_at: 'created_at',
	id: 'id',
} as const

export interface SwapProviderV3 {
	symbol: string
	name: string
	icon: string
}

export interface SwapProviderListV3 {
	providers: SwapProviderV3[]
}

export interface SwapConfirmResultV3 {
	transaction?: TransactionDataV3
}

export interface SwapV3 {
	id: string
	created_at: string
	from_chain_id: string
	to_chain_id: string
	from_token_address: string
	to_token_address: string
	from_amount: string
	to_amount: string
	steps: SwapStepV3[]
	total_estimated_time: TimeEstimateV3
	state: SwapStateV3
	error?: string
}

export interface SwapListV3 {
	swaps: SwapV3[]
}

/**
 * An enumeration.
 */
export type SortOrderV3 = (typeof SortOrderV3)[keyof typeof SortOrderV3]

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SortOrderV3 = {
	asc: 'asc',
	desc: 'desc',
} as const

export interface RouteStepV3 {
	from_chain_id: string
	to_chain_id: string
	from_token_address: string
	to_token_address: string
	from_amount: string
	to_amount: string
	from_use_delegate: boolean
	estimated_time: TimeEstimateV3
	provider_fee_native: string
	provider: string
}

export interface RelayFeeV3 {
	chain_id: string
	token_address: string
	amount: string
}

export interface QuoteV3 {
	id: string
	from_chain_id: string
	to_chain_id: string
	from_token_address: string
	to_token_address: string
	from_amount: string
	to_amount: string
	steps: RouteStepV3[]
	total_estimated_time: TimeEstimateV3
	estimated_gas: string
	fees: RelayFeeV3[]
}

export interface QuoteListV3 {
	quotes: QuoteV3[]
}

export interface PermitInfoV3 {
	chain_id: string
	token_address: string
	user_address: string
	permit_data: string
}

export interface PermitCreatedInfoV3 {
	chain_id: string
	token_address: string
	user_address: string
	expires_at: string
}

export interface HTTPValidationErrorV3 {
	detail?: ValidationErrorV3[]
}

export interface DelegateWithdrawV3 {
	chain_id: string
	user_address: string
	receiver_address: string
	token_address: string
	token_known: boolean
	token_amount: string
	withdraw_transaction?: TransactionDataV3
}

export interface DelegateAddressV3 {
	chain_id: string
	user_address: string
	from_address: string
	delegate_address: string
	delegate_address_explorer_url: string
	delegate_deployed: boolean
	deploy_transaction?: TransactionDataV3
}

export interface CreateSwapResultV3 {
	swap: SwapV3
	swap_signature_data: string
}

export interface CreateSwapV3 {
	quote_id: string
	addresses: AddressInfoV3[]
	slippage: number
	stealth?: boolean
}

export interface CreateSignatureV3 {
	signature: string
}

export interface CreatePermitParamsV3 {
	chain_id: string
	token_address: string
	user_address: string
	permit_signature: string
}

export interface BlockchainTransactionV3 {
	chain_id: string
	txid: string
	error: boolean
	explorer_url: string
}

export interface BlockchainV3 {
	symbol: string
	name: string
	chain_id: string
	icon: string
}

export interface BlockchainListV3 {
	blockchains: BlockchainV3[]
}

export interface BaseTokenV3 {
	address: string
	chain_id: string
}

export interface AllowanceInfoV3 {
	chain_id: string
	token_address: string
	user_address: string
	allowance: string
	allowance_p2: string
}

export interface AddressInfoV3 {
	address: string
	chain_id: string
}
